/* 
  JSX

  리액트에서 컴포넌트는 자바스크립트의 함수이다
  이 함수은 특이하게 HTML 값을 반환한다
  이렇듯 자바스크립트와 HTML 태그를 섞어 사용하는 문법을 JSX라고 한다

  JSX는 JavaScript XML 자바스크립트의 확장 문법이다. 
  공식 자바스크립트 문법은 아니지만 대다수의 리액트 개발자가 사용하는 문법이며
  리액트 공식문서의 예제로도 사용되고 리액트 개발팀 또한 적극적으로 사용을 권장하고 있다.

  JSX문법으로 이용하면 HTML 태그에서 자바스크립트의 표현식을 직접 사용할 수 있다
*/

// jsx와 자바스크립트 표현식
/* 
  표현식이란 값으로 평가되는 식이다 10 + 20 같은 식은 결국 30으로 평가되기 때문에 표현식이라고 한다
  JSX는 자바스크립트의 표현식을 HTML 태그와 함께 사용할 수 있어 가독성 있는 코드를 작성할 수 있다
*/

// 산술 표현식 : 숫자로 표현되는 식
// 문자열 표현식 : 문자열로 평가되는 식
// 논리 표현식 : 참이나 거짓으로 평가되는 식

/* 
  사용할 수 없는 값

  JSX는 값을 반환하는 자바스크립트의 표현식을 사용 할 수 있습니다
  원시 자료형에 해당하는 숫자 문자열 불리언 null undefined를 제외한 값을 사용하면 오류발생

  JSX는 객체 자료형을 지원하지 않는다 객체 자료형에 속하는 함수나 배열도 JSX 표현식으로 사용하면
  오류가 발생하는 것이다. 객체 자료형의 값을 페이지에 렌더링하고 싶다면
  프로퍼티 접근 표기법으로 값을 원시 자료형으로 바꿔줘야한다
*/
import React from 'react';

function Section4(props) {
  const obj = {
    a: 1,
    b: 2
  };

  const strA = "안녕";
  const strB = "리액트";
  return (
    <div>
      <h1>문자열 표현식</h1>
      <h2>{strA + strB}</h2> {/* 산술표현식 */}
      <h3>{true || false }</h3> {/* 논리표현식 */}
      <p>a: {obj.a}</p>
      <p>b: {obj.b}</p>
    </div>
  );
}

/* 
  JXS 문법에서 지켜야할 것을

  // 닫힘 규칙
    JSX의 모든 태그는 여는 태그가 있으면 반드시 닫는 태그도 있어야한다
    HTML 태그중 <img> <input>은 닫힘 태그 없이 사용하지만 JSX에서는 허용하지 않는다
    JSX에서 이 태그를 사용하려면 닫힘 태그를 반드시 병기해야한다

  // 최상위 태그 규칙
    JSX가 반환하는 모든 태그는 반드시 최상위 태그로 감싸야한다
    HTML의 태그를 최상위 태그로 사용하면 css작업할때 불편하고 의미없는 영역이 생기기도 하기에
    <React.Fragment>로 다른 태그를 감싼다 리액트 프래그먼트는 렌더링 되지 않는다
    대신 빈 태그를 사용할 수도 있다 <></>
*/

export default Section4;