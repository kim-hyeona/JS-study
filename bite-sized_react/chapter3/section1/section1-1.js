// 리액트의 특징

// 리액트의 탄생
/* 
  리액트는 웹서비스를 빠르게 개발할 수 있는 Node.js 라이브러리이다
  페이스북 개발팀이 만들어 2013년 오픈소스로 세상에 공개됐다

  옛날에는 정적인 웹을 구축하는 데 초점을 두고 있었기때문에 페이스북이 원하는 다양한 인터렉션을 구현하기 힘들었고
  서비스의 변화가 많고 사용자와 상호작용이 원활한 대규모 웹 어플리케이션을 쉽게 구축할 수 있는 기술이 필요해 만든것이 리액트이다
*/


// 컴포넌트 기반의 유연성
/* 
  리액트는 유연성이 있기 때문에 새로운 기능을 추가하거나 기능을 업그레이드할때 코드를 많이 수정하지 않아도 된다

  리액트는 모듈화를 통해 중복코드를 제거한다
  즉 여러 페이지에서 공통으로 사용하는 코드를 컴포넌트 단위의 모듈로 만들어 놓고 필요할 때 호출해 사용한다.

  리액트에서는 컴포넌트를 마치 조립용 레고 블록처럼 다룰 수 있어 매우 유연하게 페이지를 구성한다
*/


// 쉽고 간단한 업데이트
/* 
  업데이트란 웹 페이지의 정보를 교체하는 일이다. 
  업데이트의 좋은 예로 오늘날의 인스타그램 좋아요 기능이 있다

  웹에서 페이지를 업데이트 하려면 문서 객체 모델 즉 돔을을 조작해야한다
  그러나 돔에서 원하는 요소를 찾고 수정 사항을 반영하는 일은 간단하지 않다
  돔은 트리구조로 이루어져 있기 때문에 구성이 복잡하다면 원하는 요소를 찾기 어려워진다. 

  리액트는 교체가 필요한 요소는 삭제하고 새롭게 수정 사항을 반영한 요소를 통째로 업데이트하여
  어떤 부분을 어떻게 업데이트할지 고민하지 않아도 간단하게 페이지를 업데이트 할 수 있다. 
*/


// 빠른 업데이트
/* 
  빠른 업데이트는 웹 서비스의 성능을 좌우하는 중요한 요소이다
  만약 사용자가 버튼을 클릭할때마다 5초 이상이 걸린다면 불편할 것이다. 

  //  브라우저는 어떻게 페이지를 표시하나
    업데이트는 결국 브라우저가 페이지를 다시 렌더링하는 행위이다
    예를 들어 버튼을 클릭했을때 버튼의 색상을 파란색에서 빨간색으로 바꾸려면 브라우저가 페이지를 다시 렌더링해야한다
    렌더링 과정에서 요소의 위치를 결정하는 레이아웃과 요소를 실제로 페이지에 표시하는 페인팅 과정은 많은 연산을 동반하고
    돔에 업데이트가 필요 이상으로 많아지면 브라우저 성능을 떨어트리게 된다. 
    브라우저의 성능이 떨어지면 소위 렉 현상이 일어나거나 심할 경우 응답 불능 상태에 빠집니다. 


  //  버추얼 돔을 이용한 효율적인 업데이트
    페인팅과 레이아웃을 여러 번 수행하지 않으려면 여러 번의 업데이트를 모았다가 업데이트가 필요할 때 한 번에 처리해야 효율적이다
    리액트는 이를 위해 버추얼 돔 가상의 돔을 사용하고 이는 실제 돔의 사본이다. 

    리액트에서는 페이지에서 변경 사항이 생기면 먼저 가상의 돔을 업데이트했다가 한번에 실제 돔에 반영한다 
*/


