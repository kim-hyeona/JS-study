// 반복문
/* 
  프로그래밍에서 동일하거나 유사한 동작이 반복해서 나올 때는 반복문(loop)을 사용한다
*/

// for문
for (let i = 1; i <= 100; i++){ //콘솔창에 1부터 100까지 출력하는 코드를 단 세줄로 끝낼 수 있다
  console.log(i);
}

/* 
  for문 기본 사용법
  
  for(초기식; 조건식; 증감식){
    실행할 명령
  }

  for문은 조건식과 일치하지 않을때까지 반복하면서 중괄호에 있는 명령를 수행합니다.

  초기식
  : 반복문에 사용할 변수를 초기화하는 식입니다
  초기식은 처음 한번만 실행되며 초기식에서 선언한 변수는 반복될때마다 증감식으로 같이
  변동되기때문에 카운터 변수라고도 합니다
  카운터 변수는 반복문 외부에서는 사용할 수 없습니다

  조건식
  : 언제까지 반복할 것인지를 정하는 식입니다
  반복할때마다 조건을 검사해서 조건이 참이면 반복을 계속하고 거짓이면 반복을 멈춥니다
   i <= 100;은 초기식에서 선언한 카운터 변수 i가 100을 초과하면 반복을 종료하겠다는 뜻입니다

  증감식
  : 반복할때마다 카운터 변수를 증가 또는 감소하는 식입니다.
  증감연산자인 ++와 --를 주로 사용하는데 복합대입연산자를 쓰기도 합니다.
  증감식 i++은 반복할때마다 변수 i의 값을 1씩 증가시킵니다.
*/


// 반복문 강제로 종료하기, 건너뛰기
/* 
  break문을 사용하면 조건식에서 정의한 반복문의 종료조건과 상관없이 종료 할 수 있다
*/

for(let idx = 1; idx <= 100; idx++){
  if(idx > 10){ // idx가 10보다 크면 콘솔에 반복문 종료~를 출격하면서 break문이 실행되고 반복문이 종료됨
    console.log('반복문 종료~');
    break
  }
  console.log('idx');
}


/* 
  continue문을 사용하면 반복 과정을 건너띈다
*/
// 1부터 10까지 숫자 중 홀수만 출력하는 예시

for(let idx = 1; idx <= 10; idx++){
  if(idx % 2 === 0){ // 변수 idx를 2로 나누어 나머지가 0이라는것은 짝수라는 의미임으로 
    continue;        // if문에서 idx가 짝수면 continue문을 만나면 다음명령 console.log(idx);을 실행하는대신 건너뛰게 된다
  }
  console.log(idx);
}