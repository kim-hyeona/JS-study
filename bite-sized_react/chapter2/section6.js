// 스프레드연산자와 rest 매개변수
/* 
  스프레드 연산자는 "..." 기호로 표기하는데 전개 연산자라고도 표현
  스프레드 연산자를 이용하면 배열, 문자열, 객체 등과 같이 반복이 가능한 객체의 값을 개별 요소로 분리할 수 있습니다.
*/

// 스프레드 연산자와 배열, 객체,함수

// 배열
let arrA = [1, 2, 3];
let arrB = [...arrA, 4,5,6];

console.log(arrB); // [ 1, 2, 3, 4, 5, 6 ]


// 객체
let objA = {
  a: 1,
  b: 2
}

let objB = {
  ...objA,
  c: 3
}

console.log(objB); // { a: 1, b: 2, c: 3 }


// 함수
// 스프레드 연산자로 배열 요소를 분리하여 함수의 인수로 전달

function func(a,b,c){
  console.log(a,b,c);
}

let arr = [1,2,3];
func(...arr) // 1 2 3




// rest 매개변수
/* 
  rset 매개변수는 나머지 매개변수라고도 하며 스프레드 연산자처럼 기호 ...로 표기
  스프레드 연산자는 배열이나 객체처럼 반복 가능한 값을 개별요소로 분리하지만 rest 매개변수는 반대로 개별 요소를 배열로 묶는다
*/

function func(...rset){
    console.log(rest);
}

func(1,2,3,4)

/* 
  매개변수로 사용할 변수 이름 앞에 ...를 붙이면 rest 매개변수가 된다.
  rset 매개변수는 함수에 전달한 인수들을 순차적으로 배열에 저장한다
  따라서 변수에 저장되는 값은 [1,2,3,4]가 된다
*/


// rest 매개변수를 다른 매개변수와 함께 사용하는 경우
function func(param,...rest){
    console.log(param); //1
    console.log(rest); //[2,3,4]
}

func(1,2,3,4)

/* 
  인수는 순차적으로 왼쪽부터 오른쪽으로 할당된다 매개변수 param에는 첫번째 인수 1이 할당된것이고
  나머지 인수들은 순차적을오 변수 rest에 배열로 할당된것입니다

  rest 매개변수는 먼저 선언한 매개변수에 할당된 인수를 제외하고 나머지를 모두 배열에 저장합니다.
  따라서 반드시 매개변수에서 마지막에 선언되어야한다
*/